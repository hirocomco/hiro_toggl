"""Add settings table

Revision ID: 001
Revises: 
Create Date: 2024-12-12 10:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=100), nullable=False),
    sa.Column('value', sa.Text(), nullable=False),
    sa.Column('data_type', sa.String(length=20), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('scope', sa.String(length=20), nullable=False),
    sa.Column('workspace_id', sa.Integer(), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('is_readonly', sa.Boolean(), nullable=True),
    sa.Column('effective_date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_settings_category'), 'settings', ['category'], unique=False)
    op.create_index(op.f('ix_settings_client_id'), 'settings', ['client_id'], unique=False)
    op.create_index(op.f('ix_settings_data_type'), 'settings', ['data_type'], unique=False)
    op.create_index(op.f('ix_settings_effective_date'), 'settings', ['effective_date'], unique=False)
    op.create_index(op.f('ix_settings_id'), 'settings', ['id'], unique=False)
    op.create_index(op.f('ix_settings_key'), 'settings', ['key'], unique=False)
    op.create_index(op.f('ix_settings_scope'), 'settings', ['scope'], unique=False)
    op.create_index(op.f('ix_settings_workspace_id'), 'settings', ['workspace_id'], unique=False)
    
    # Set default values for new columns
    op.execute("UPDATE settings SET data_type = 'string' WHERE data_type IS NULL")
    op.execute("UPDATE settings SET category = 'general' WHERE category IS NULL")
    op.execute("UPDATE settings SET scope = 'system' WHERE scope IS NULL")
    op.execute("UPDATE settings SET is_readonly = false WHERE is_readonly IS NULL")
    op.execute("UPDATE settings SET effective_date = CURRENT_DATE WHERE effective_date IS NULL")
    
    # Make columns non-nullable after setting defaults
    op.alter_column('settings', 'data_type', nullable=False, server_default='string')
    op.alter_column('settings', 'category', nullable=False, server_default='general')
    op.alter_column('settings', 'scope', nullable=False, server_default='system')
    op.alter_column('settings', 'is_readonly', nullable=False, server_default='false')
    op.alter_column('settings', 'effective_date', nullable=False, server_default=sa.text('CURRENT_DATE'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_settings_workspace_id'), table_name='settings')
    op.drop_index(op.f('ix_settings_scope'), table_name='settings')
    op.drop_index(op.f('ix_settings_key'), table_name='settings')
    op.drop_index(op.f('ix_settings_id'), table_name='settings')
    op.drop_index(op.f('ix_settings_effective_date'), table_name='settings')
    op.drop_index(op.f('ix_settings_data_type'), table_name='settings')
    op.drop_index(op.f('ix_settings_client_id'), table_name='settings')
    op.drop_index(op.f('ix_settings_category'), table_name='settings')
    op.drop_table('settings')
    # ### end Alembic commands ###